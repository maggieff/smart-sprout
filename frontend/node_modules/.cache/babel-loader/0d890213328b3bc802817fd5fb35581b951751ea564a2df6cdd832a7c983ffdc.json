{"ast":null,"code":"var _jsxFileName = \"/Users/maggie/Desktop/smart-sprout/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\n// Components\nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard';\nimport PlantDetail from './components/PlantDetail';\nimport AIChat from './components/AIChat';\nimport LoadingSpinner from './components/LoadingSpinner';\n\n// Services\nimport { plantService } from './services/plantService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n`;\n_c = AppContainer;\nconst MainContent = styled.main`\n  padding-top: 80px;\n  min-height: calc(100vh - 80px);\n`;\n_c2 = MainContent;\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [plants, setPlants] = useState([]);\n  const [selectedPlant, setSelectedPlant] = useState(null);\n  useEffect(() => {\n    initializeApp();\n  }, []);\n  const initializeApp = async () => {\n    try {\n      setLoading(true);\n\n      // Load plants data\n      const plantsData = await plantService.getAllPlants();\n      setPlants(plantsData.plants || []);\n\n      // Set default selected plant\n      if (plantsData.plants && plantsData.plants.length > 0) {\n        setSelectedPlant(plantsData.plants[0]);\n      }\n    } catch (error) {\n      console.error('Error initializing app:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handlePlantSelect = plant => {\n    setSelectedPlant(plant);\n  };\n  const handlePlantUpdate = updatedPlant => {\n    setPlants(prevPlants => prevPlants.map(plant => plant.id === updatedPlant.id ? updatedPlant : plant));\n    if (selectedPlant && selectedPlant.id === updatedPlant.id) {\n      setSelectedPlant(updatedPlant);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      plants: plants,\n      selectedPlant: selectedPlant,\n      onPlantSelect: handlePlantSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {\n            plants: plants,\n            selectedPlant: selectedPlant,\n            onPlantSelect: handlePlantSelect,\n            onPlantUpdate: handlePlantUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/plant/:plantId\",\n          element: /*#__PURE__*/_jsxDEV(PlantDetail, {\n            plants: plants,\n            onPlantUpdate: handlePlantUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/ai-chat\",\n          element: /*#__PURE__*/_jsxDEV(AIChat, {\n            selectedPlant: selectedPlant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vSLcs6NzTLyoXpjBVS6O9AGrp0w=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","styled","motion","Header","Dashboard","PlantDetail","AIChat","LoadingSpinner","plantService","jsxDEV","_jsxDEV","AppContainer","div","_c","MainContent","main","_c2","App","_s","loading","setLoading","plants","setPlants","selectedPlant","setSelectedPlant","initializeApp","plantsData","getAllPlants","length","error","console","handlePlantSelect","plant","handlePlantUpdate","updatedPlant","prevPlants","map","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onPlantSelect","path","element","onPlantUpdate","_c3","$RefreshReg$"],"sources":["/Users/maggie/Desktop/smart-sprout/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\n// Components\nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard';\nimport PlantDetail from './components/PlantDetail';\nimport AIChat from './components/AIChat';\nimport LoadingSpinner from './components/LoadingSpinner';\n\n// Services\nimport { plantService } from './services/plantService';\n\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n`;\n\nconst MainContent = styled.main`\n  padding-top: 80px;\n  min-height: calc(100vh - 80px);\n`;\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [plants, setPlants] = useState([]);\n  const [selectedPlant, setSelectedPlant] = useState(null);\n\n  useEffect(() => {\n    initializeApp();\n  }, []);\n\n  const initializeApp = async () => {\n    try {\n      setLoading(true);\n      \n      // Load plants data\n      const plantsData = await plantService.getAllPlants();\n      setPlants(plantsData.plants || []);\n      \n      // Set default selected plant\n      if (plantsData.plants && plantsData.plants.length > 0) {\n        setSelectedPlant(plantsData.plants[0]);\n      }\n      \n    } catch (error) {\n      console.error('Error initializing app:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePlantSelect = (plant) => {\n    setSelectedPlant(plant);\n  };\n\n  const handlePlantUpdate = (updatedPlant) => {\n    setPlants(prevPlants => \n      prevPlants.map(plant => \n        plant.id === updatedPlant.id ? updatedPlant : plant\n      )\n    );\n    \n    if (selectedPlant && selectedPlant.id === updatedPlant.id) {\n      setSelectedPlant(updatedPlant);\n    }\n  };\n\n  if (loading) {\n    return (\n      <AppContainer>\n        <LoadingSpinner />\n      </AppContainer>\n    );\n  }\n\n  return (\n    <AppContainer>\n      <Header \n        plants={plants}\n        selectedPlant={selectedPlant}\n        onPlantSelect={handlePlantSelect}\n      />\n      \n      <MainContent>\n        <Routes>\n          <Route \n            path=\"/\" \n            element={\n              <Dashboard \n                plants={plants}\n                selectedPlant={selectedPlant}\n                onPlantSelect={handlePlantSelect}\n                onPlantUpdate={handlePlantUpdate}\n              />\n            } \n          />\n          <Route \n            path=\"/plant/:plantId\" \n            element={\n              <PlantDetail \n                plants={plants}\n                onPlantUpdate={handlePlantUpdate}\n              />\n            } \n          />\n          <Route \n            path=\"/ai-chat\" \n            element={\n              <AIChat \n                selectedPlant={selectedPlant}\n              />\n            } \n          />\n        </Routes>\n      </MainContent>\n    </AppContainer>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}