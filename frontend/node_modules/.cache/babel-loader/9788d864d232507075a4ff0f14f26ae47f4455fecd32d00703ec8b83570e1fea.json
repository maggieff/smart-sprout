{"ast":null,"code":"var _jsxFileName = \"/Users/maggie/Desktop/smart-sprout/frontend/src/components/QuickActions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { FiDroplet, FiSun, FiThermometer, FiWind, FiMessageCircle, FiCamera, FiPlus, FiCheck } from 'react-icons/fi';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 0.75rem;\n`;\n_c = ActionsGrid;\nconst ActionButton = styled(motion.button)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 1rem;\n  background: ${props => props.bgColor || '#f9fafb'};\n  border: 1px solid ${props => props.borderColor || '#e5e7eb'};\n  border-radius: 0.75rem;\n  color: ${props => props.color || '#374151'};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.875rem;\n  font-weight: 500;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px -2px rgba(0, 0, 0, 0.1);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c2 = ActionButton;\nconst ActionIcon = styled.div`\n  font-size: 1.5rem;\n  margin-bottom: 0.25rem;\n`;\n_c3 = ActionIcon;\nconst ActionLabel = styled.div`\n  font-size: 0.75rem;\n  text-align: center;\n  line-height: 1.2;\n`;\n_c4 = ActionLabel;\nconst ActionStatus = styled.div`\n  font-size: 0.625rem;\n  color: #6b7280;\n  margin-top: 0.25rem;\n`;\n_c5 = ActionStatus;\nconst QuickActions = ({\n  plant\n}) => {\n  _s();\n  const [actions, setActions] = useState({\n    watered: false,\n    fertilized: false,\n    repotted: false,\n    photographed: false\n  });\n  const handleAction = async actionType => {\n    try {\n      // Simulate action\n      setActions(prev => ({\n        ...prev,\n        [actionType]: true\n      }));\n\n      // Show success message\n      const messages = {\n        watered: 'Plant watered! ðŸ’§',\n        fertilized: 'Fertilizer applied! ðŸŒ±',\n        repotted: 'Repotting logged! ðŸª´',\n        photographed: 'Photo uploaded! ðŸ“¸'\n      };\n      toast.success(messages[actionType]);\n\n      // Reset after 3 seconds\n      setTimeout(() => {\n        setActions(prev => ({\n          ...prev,\n          [actionType]: false\n        }));\n      }, 3000);\n    } catch (error) {\n      console.error('Error performing action:', error);\n      toast.error('Failed to perform action');\n    }\n  };\n  const getActionConfig = type => {\n    const configs = {\n      watered: {\n        icon: /*#__PURE__*/_jsxDEV(FiDroplet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this),\n        label: 'Water Plant',\n        bgColor: '#f0f9ff',\n        borderColor: '#0ea5e9',\n        color: '#0ea5e9'\n      },\n      fertilized: {\n        icon: /*#__PURE__*/_jsxDEV(FiSun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this),\n        label: 'Add Fertilizer',\n        bgColor: '#fffbeb',\n        borderColor: '#f59e0b',\n        color: '#f59e0b'\n      },\n      repotted: {\n        icon: /*#__PURE__*/_jsxDEV(FiWind, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this),\n        label: 'Log Repotting',\n        bgColor: '#f0fdf4',\n        borderColor: '#10b981',\n        color: '#10b981'\n      },\n      photographed: {\n        icon: /*#__PURE__*/_jsxDEV(FiCamera, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this),\n        label: 'Take Photo',\n        bgColor: '#fef2f2',\n        borderColor: '#ef4444',\n        color: '#ef4444'\n      }\n    };\n    return configs[type];\n  };\n  const getStatusText = actionType => {\n    if (actions[actionType]) {\n      return 'Done!';\n    }\n    switch (actionType) {\n      case 'watered':\n        return 'Tap to water';\n      case 'fertilized':\n        return 'Add nutrients';\n      case 'repotted':\n        return 'Log activity';\n      case 'photographed':\n        return 'Upload photo';\n      default:\n        return 'Tap to perform';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ActionsGrid, {\n    children: Object.keys(actions).map(actionType => {\n      const config = getActionConfig(actionType);\n      const isCompleted = actions[actionType];\n      return /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: () => handleAction(actionType),\n        disabled: isCompleted,\n        bgColor: isCompleted ? '#d1fae5' : config.bgColor,\n        borderColor: isCompleted ? '#10b981' : config.borderColor,\n        color: isCompleted ? '#065f46' : config.color,\n        whileHover: {\n          scale: 1.02\n        },\n        whileTap: {\n          scale: 0.98\n        },\n        children: [/*#__PURE__*/_jsxDEV(ActionIcon, {\n          children: isCompleted ? /*#__PURE__*/_jsxDEV(FiCheck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 30\n          }, this) : config.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ActionLabel, {\n          children: config.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ActionStatus, {\n          children: getStatusText(actionType)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, actionType, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(QuickActions, \"4+qqaa8b4RS7cwdKc/14e0SU2/c=\");\n_c6 = QuickActions;\nexport default QuickActions;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ActionsGrid\");\n$RefreshReg$(_c2, \"ActionButton\");\n$RefreshReg$(_c3, \"ActionIcon\");\n$RefreshReg$(_c4, \"ActionLabel\");\n$RefreshReg$(_c5, \"ActionStatus\");\n$RefreshReg$(_c6, \"QuickActions\");","map":{"version":3,"names":["React","useState","styled","motion","FiDroplet","FiSun","FiThermometer","FiWind","FiMessageCircle","FiCamera","FiPlus","FiCheck","toast","jsxDEV","_jsxDEV","ActionsGrid","div","_c","ActionButton","button","props","bgColor","borderColor","color","_c2","ActionIcon","_c3","ActionLabel","_c4","ActionStatus","_c5","QuickActions","plant","_s","actions","setActions","watered","fertilized","repotted","photographed","handleAction","actionType","prev","messages","success","setTimeout","error","console","getActionConfig","type","configs","icon","fileName","_jsxFileName","lineNumber","columnNumber","label","getStatusText","children","Object","keys","map","config","isCompleted","onClick","disabled","whileHover","scale","whileTap","_c6","$RefreshReg$"],"sources":["/Users/maggie/Desktop/smart-sprout/frontend/src/components/QuickActions.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { \n  FiDroplet, \n  FiSun, \n  FiThermometer, \n  FiWind,\n  FiMessageCircle,\n  FiCamera,\n  FiPlus,\n  FiCheck\n} from 'react-icons/fi';\nimport toast from 'react-hot-toast';\n\nconst ActionsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 0.75rem;\n`;\n\nconst ActionButton = styled(motion.button)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 1rem;\n  background: ${props => props.bgColor || '#f9fafb'};\n  border: 1px solid ${props => props.borderColor || '#e5e7eb'};\n  border-radius: 0.75rem;\n  color: ${props => props.color || '#374151'};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.875rem;\n  font-weight: 500;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px -2px rgba(0, 0, 0, 0.1);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst ActionIcon = styled.div`\n  font-size: 1.5rem;\n  margin-bottom: 0.25rem;\n`;\n\nconst ActionLabel = styled.div`\n  font-size: 0.75rem;\n  text-align: center;\n  line-height: 1.2;\n`;\n\nconst ActionStatus = styled.div`\n  font-size: 0.625rem;\n  color: #6b7280;\n  margin-top: 0.25rem;\n`;\n\nconst QuickActions = ({ plant }) => {\n  const [actions, setActions] = useState({\n    watered: false,\n    fertilized: false,\n    repotted: false,\n    photographed: false\n  });\n\n  const handleAction = async (actionType) => {\n    try {\n      // Simulate action\n      setActions(prev => ({ ...prev, [actionType]: true }));\n      \n      // Show success message\n      const messages = {\n        watered: 'Plant watered! ðŸ’§',\n        fertilized: 'Fertilizer applied! ðŸŒ±',\n        repotted: 'Repotting logged! ðŸª´',\n        photographed: 'Photo uploaded! ðŸ“¸'\n      };\n      \n      toast.success(messages[actionType]);\n      \n      // Reset after 3 seconds\n      setTimeout(() => {\n        setActions(prev => ({ ...prev, [actionType]: false }));\n      }, 3000);\n      \n    } catch (error) {\n      console.error('Error performing action:', error);\n      toast.error('Failed to perform action');\n    }\n  };\n\n  const getActionConfig = (type) => {\n    const configs = {\n      watered: {\n        icon: <FiDroplet />,\n        label: 'Water Plant',\n        bgColor: '#f0f9ff',\n        borderColor: '#0ea5e9',\n        color: '#0ea5e9'\n      },\n      fertilized: {\n        icon: <FiSun />,\n        label: 'Add Fertilizer',\n        bgColor: '#fffbeb',\n        borderColor: '#f59e0b',\n        color: '#f59e0b'\n      },\n      repotted: {\n        icon: <FiWind />,\n        label: 'Log Repotting',\n        bgColor: '#f0fdf4',\n        borderColor: '#10b981',\n        color: '#10b981'\n      },\n      photographed: {\n        icon: <FiCamera />,\n        label: 'Take Photo',\n        bgColor: '#fef2f2',\n        borderColor: '#ef4444',\n        color: '#ef4444'\n      }\n    };\n    return configs[type];\n  };\n\n  const getStatusText = (actionType) => {\n    if (actions[actionType]) {\n      return 'Done!';\n    }\n    \n    switch (actionType) {\n      case 'watered':\n        return 'Tap to water';\n      case 'fertilized':\n        return 'Add nutrients';\n      case 'repotted':\n        return 'Log activity';\n      case 'photographed':\n        return 'Upload photo';\n      default:\n        return 'Tap to perform';\n    }\n  };\n\n  return (\n    <ActionsGrid>\n      {Object.keys(actions).map((actionType) => {\n        const config = getActionConfig(actionType);\n        const isCompleted = actions[actionType];\n        \n        return (\n          <ActionButton\n            key={actionType}\n            onClick={() => handleAction(actionType)}\n            disabled={isCompleted}\n            bgColor={isCompleted ? '#d1fae5' : config.bgColor}\n            borderColor={isCompleted ? '#10b981' : config.borderColor}\n            color={isCompleted ? '#065f46' : config.color}\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            <ActionIcon>\n              {isCompleted ? <FiCheck /> : config.icon}\n            </ActionIcon>\n            <ActionLabel>{config.label}</ActionLabel>\n            <ActionStatus>{getStatusText(actionType)}</ActionStatus>\n          </ActionButton>\n        );\n      })}\n    </ActionsGrid>\n  );\n};\n\nexport default QuickActions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}